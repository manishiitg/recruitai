version: '3.7'

services:

    rabbitmq:
        image: rabbitmq:3-management
        hostname: rabbitmq
        ports:
            # The standard AMQP protocol port
            - '5672:5672'
            # HTTP management UI
            - '15672:15672'
        networks:
            - ai


    create_certs:
        container_name: create_certs
        image: docker.elastic.co/elasticsearch/elasticsearch:7.8.1
        command: >
            bash -c '
            if [[ ! -f ./config/certificates/elastic-certificates.p12 ]]; then
                bin/elasticsearch-certutil cert -out config/certificates/elastic-certificates.p12 -pass ""
            fi;
            chown -R 1000:0 /usr/share/elasticsearch/config/certificates
            '
        user: "0"
        working_dir: /usr/share/elasticsearch
        volumes: ['certs:/usr/share/elasticsearch/config/certificates']

                
    elasticsearch:
        image: docker.elastic.co/elasticsearch/elasticsearch:7.8.1
        container_name: elasticsearch
        volumes:
            - type: bind
              source: ./config/elasticsearch/config/elasticsearch.yml
              target: /usr/share/elasticsearch/config/elasticsearch.yml
              read_only: true
            - type: volume
              source: elasticsearch
              target: /usr/share/elasticsearch/data
            - type: volume
              source: certs
              target: /usr/share/elasticsearch/config/certificates
        ports:
            - "9200:9200"
            - "9300:9300"
        ulimits:
            memlock:
                soft: -1
                hard: -1
        environment:
            - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
            - ELASTIC_USERNAME=elastic
            - ELASTIC_PASSWORD=DkIedPPSCb
            - xpack.security.enabled=true
            - xpack.security.transport.ssl.enabled=true
            - xpack.security.transport.ssl.verification_mode=certificate
            - xpack.security.transport.ssl.keystore.path=/usr/share/elasticsearch/config/certificates/elastic-certificates.p12
            - xpack.security.transport.ssl.truststore.path=/usr/share/elasticsearch/config/certificates/elastic-certificates.p12
        
            # Use single node discovery in order to disable production mode and avoid bootstrap checks
            # see https://www.elastic.co/guide/en/elasticsearch/reference/current/bootstrap-checks.html
            - discovery.type=single-node
        networks:
            - ai
        
    kibana:
        image: docker.elastic.co/kibana/kibana:7.8.1
        environment:
            SERVER_NAME: kibana.local
        volumes:
            - type: bind
              source: ./config/kibana/config/kibana.yml
              target: /usr/share/kibana/config/kibana.yml
              read_only: true
        ports:
            - "5601:5601"
        depends_on:
            - elasticsearch
        networks:
            - ai

    logstash:
        image: docker.elastic.co/logstash/logstash:7.9.0
        volumes:
            - type: bind
              source: ./config/logstash/config/logstash.yml
              target: /usr/share/logstash/config/logstash.yml
              read_only: true
            - type: bind
              source: ./config/logstash/pipeline
              target: /usr/share/logstash/pipeline
              read_only: true
        ports:
        - "5005:5000/tcp"
        - "5005:5000/udp"
        - "9600:9600"
        environment:
            - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
        depends_on:
            - elasticsearch
        networks:
            - ai

    # filebeat:
    #     image: docker.elastic.co/beats/filebeat:7.9.0
    #     user:
    #         root
    #     volumes:
    #         - ./config/filebeat/filebeat.yml:/usr/share/filebeat/filebeat.yml:ro
    #         - /var/lib/docker:/var/lib/docker:ro
    #         - /var/run/docker.sock:/var/run/docker.sock
    #         - /var/log/recruitai:/var/log/recruitai:ro
    #     command: ["--strict.perms=false"]
    #     depends_on:
    #         - logstash
    #     networks:
    #         - ai


    label-studio-ner:
        image: recruitai/ner:latest
        build: ./label-studio/ner
        ports:
            - 8000:8080
        volumes:
            - ./label-studio/ner/project:/label-studio/ner
        networks:
            - ai


    redis:
        image: redis
        command: ["redis-server", "--appendonly", "yes"] # https://redis.io/topics/persistence
        volumes:
            - redis-data:/data
        ports:
            - 6379:6379
        networks:
            - ai
                

    api:
        image: recruitai/api:latest
        build: microservice/api
        ports:
            - "8086:5001"
        volumes:
            - ./pretrained:/workspace/pretrained:ro
            - ./cvreconstruction:/workspace/cvreconstruction 
            - /var/log/recruitai:/workspace/logs 
            - ./account.config.json:/workspace/app/account.config.json:ro
            - ./microservice/api/app:/workspace/app
            - ./label-studio/ner/project:/workspace/ner
        environment:
            - IS_DEV=False
            - RABBIT_DB=amqp://rabbitmq?connection_attempts=5&retry_delay=5&heartbeat=3600
            - BATCH_PROCESSING_DELAY=60
        depends_on:
            - elasticsearch
            - redis
        networks:
            - ai
        
    resumemq:
        image: recruitai/resumemq:latest
        build: microservice/resume
        
        volumes:
            - ./pretrained:/workspace/pretrained:ro
            - /var/log/recruitai:/workspace/logs  
            - ./microservice/resume/app:/workspace/app            
        environment:
            RABBIT_DB: amqp://rabbitmq?connection_attempts=5&retry_delay=5&heartbeat=3600
            RESUME_PARALLEL_PROCESS: 1
        networks:
            - ai
    
    picturemq:
        image: recruitai/picturemq:latest
        build: microservice/picture
        volumes:
            - ./pretrained:/workspace/pretrained:ro
            - ./cvreconstruction:/workspace/cvreconstruction 
            - /var/log/recruitai:/workspace/logs  
            - ./microservice/picture/app:/workspace/app            
        environment:
            RABBIT_DB: amqp://rabbitmq?connection_attempts=5&retry_delay=5
        networks:
            - ai

    summarymq:
        image: recruitai/summarymq:latest
        build: microservice/summary
        volumes:
            - ./pretrained:/workspace/pretrained:ro
            - ./cvreconstruction:/workspace/cvreconstruction 
            - /var/log/recruitai:/workspace/logs  
            - ./microservice/summary/app:/workspace/app            
        environment:
            RABBIT_DB: amqp://rabbitmq?connection_attempts=5&retry_delay=5
        networks:
            - ai

    classifymq:
        image: recruitai/classifymq:latest
        build: microservice/classify
        volumes:
            - ./pretrained:/workspace/pretrained:ro
            - ./cvreconstruction:/workspace/cvreconstruction 
            - /var/log/recruitai:/workspace/logs  
            - ./microservice/classify/app:/workspace/app            
        environment:
            RABBIT_DB: amqp://rabbitmq?connection_attempts=5&retry_delay=5&heartbeat=3600
        networks:
            - ai
    
    skillmq:
        image: recruitai/skillmq:latest
        build: microservice/skill
        volumes:
            - ./pretrained:/workspace/pretrained:ro
            - ./cvreconstruction:/workspace/cvreconstruction 
            - /var/log/recruitai:/workspace/logs  
            - ./microservice/skill/app:/workspace/app            
        # Environment variables:
        environment:
            RABBIT_DB: amqp://rabbitmq?connection_attempts=5&retry_delay=5&heartbeat=3600
            
        networks:
            - ai
    
    searchmq:
        image: recruitai/searchmq:latest
        build: microservice/search
        volumes:
            - ./pretrained:/workspace/pretrained:ro
            - ./cvreconstruction:/workspace/cvreconstruction 
            - /var/log/recruitai:/workspace/logs  
            - ./microservice/search/app:/workspace/app            
        environment:
            - RABBIT_DB=amqp://rabbitmq?connection_attempts=5&retry_delay=5&heartbeat=3600
            - ELASTIC_USERNAME=elastic
            - ELASTIC_PASSWORD=DkIedPPSCb
        depends_on: 
            - elasticsearch
        networks:
            - ai

    searchindexmq:
        image: recruitai/searchindex:latest
        build: microservice/searchindex
        volumes:
            - ./pretrained:/workspace/pretrained:ro
            - ./cvreconstruction:/workspace/cvreconstruction 
            - /var/log/recruitai:/workspace/logs  
            - ./microservice/searchindex/app:/workspace/app            
        environment:
            - RABBIT_DB=amqp://rabbitmq?connection_attempts=5&retry_delay=5&heartbeat=3600
            - ELASTIC_USERNAME=elastic
            - ELASTIC_PASSWORD=DkIedPPSCb
        depends_on: 
            - elasticsearch
            - redis
        networks:
            - ai

    skillextractmq:
        image: recruitai/skillextractmq:latest
        build: microservice/skillextract
        volumes:
            - ./pretrained:/workspace/pretrained:ro
            - ./cvreconstruction:/workspace/cvreconstruction 
            - /var/log/recruitai:/workspace/logs  
            - ./microservice/skillextract/app:/workspace/app            
        environment:
            RABBIT_DB: amqp://rabbitmq?connection_attempts=5&retry_delay=5
        networks:
            - ai
    
    gendermq:
        image: recruitai/gendermq:latest
        build: microservice/gender
        volumes:
            - ./pretrained:/workspace/pretrained:ro
            - ./cvreconstruction:/workspace/cvreconstruction 
            - /var/log/recruitai:/workspace/logs  
            - ./microservice/gender/app:/workspace/app            
        environment:
            RABBIT_DB: amqp://rabbitmq?connection_attempts=5&retry_delay=5
        networks:
            - ai

    imagemq:
        image: recruitai/imagemq:latest
        build: microservice/image
        volumes:
            - ./pretrained:/workspace/pretrained:ro
            - /var/log/recruitai:/workspace/logs  
            - ./microservice/image/app:/workspace/app            
        environment:
            RABBIT_DB: amqp://rabbitmq?connection_attempts=5&retry_delay=5
        networks:
            - ai

    datasyncmq:
        image: recruitai/datasyncmq:latest
        build: microservice/datasync
        volumes:
            - ./pretrained:/workspace/pretrained:ro
            - ./cvreconstruction:/workspace/cvreconstruction 
            - /var/log/recruitai:/workspace/logs  
            - ./microservice/datasync/app:/workspace/app            
        environment:
            RABBIT_DB: amqp://rabbitmq?connection_attempts=5&retry_delay=5
            CRON_SCHEDULE: '0 0 * * *'
        networks:
            - ai

    candidatemq:
        image: recruitai/candidatemq:latest
        build: microservice/candidate
        volumes:
            - ./pretrained:/workspace/pretrained:ro
            - ./cvreconstruction:/workspace/cvreconstruction 
            - /var/log/recruitai:/workspace/logs  
            - ./microservice/candidate/app:/workspace/app            
        environment:
            RABBIT_DB: amqp://rabbitmq?connection_attempts=5&retry_delay=5
        networks:
            - ai

    filtermq:
        image: recruitai/filtermq:latest
        build: microservice/filter
        volumes:
            - ./pretrained:/workspace/pretrained:ro
            - ./cvreconstruction:/workspace/cvreconstruction 
            - /var/log/recruitai:/workspace/logs  
            - ./microservice/filter/app:/workspace/app            
        environment:
            RABBIT_DB: amqp://rabbitmq?connection_attempts=5&retry_delay=5
        networks:
            - ai
        
    statsmq:
        image: recruitai/statsmq:latest
        build: microservice/stats
        volumes:
            - ./pretrained:/workspace/pretrained:ro
            - /var/log/recruitai:/workspace/logs  
            - ./microservice/stats/app:/workspace/app        
            - /var/run/docker.sock:/var/run/docker.sock
        environment:
            RABBIT_DB: 'amqp://127.0.0.1:5672'
            RABBIT_API_URL: 'http://127.0.0.1:15672'
            RABBIT_LOGIN: 'guest:guest'
        network_mode: host
    
    gpu:
        build: microservice/gpucloud
        volumes:
            - ./pretrained:/workspace/pretrained:ro
            - /var/log/recruitai:/workspace/logs  
            - ./microservice/gpucloud/app:/workspace/app        
            - /var/run/docker.sock:/var/run/docker.sock
        environment:
            RABBIT_DB: 'amqp://127.0.0.1:5672'
            RABBIT_API_URL: 'http://127.0.0.1:15672'
            RABBIT_LOGIN: 'guest:guest'
            SENDGRID_API_KEY: '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'
        network_mode: host

volumes: 
    elasticsearch:
    redis-data:
    certs:

networks:
    ai:
version: '3.7'

services:
    elasticsearch:
        image: docker.elastic.co/elasticsearch/elasticsearch:7.6.0
        container_name: elasticsearch
        volumes:
            - type: bind
              source: ./elasticsearch/config/elasticsearch.yml
              target: /usr/share/elasticsearch/config/elasticsearch.yml
              read_only: true
            - type: volume
              source: elasticsearch
              target: /usr/share/elasticsearch/data
        ports:
            - "9200:9200"
            - "9300:9300"
        ulimits:
            memlock:
                soft: -1
                hard: -1
        environment:
            ES_JAVA_OPTS: "-Xmx512m -Xms512m"
            # ELASTIC_PASSWORD: 
            # Use single node discovery in order to disable production mode and avoid bootstrap checks
            # see https://www.elastic.co/guide/en/elasticsearch/reference/current/bootstrap-checks.html
            discovery.type: single-node
        networks:
            - ai
        
    kibana:
        image: docker.elastic.co/kibana/kibana:7.6.0
        environment:
            SERVER_NAME: kibana.local
            ELASTICSEARCH_URL: http://elasticsearch:9200
        volumes:
            - type: bind
              source: ./kibana/config/kibana.yml
              target: /usr/share/kibana/config/kibana.yml
              read_only: true
        ports:
            - "5601:5601"
        networks:
            - ai

    logstash:
        image: docker.elastic.co/logstash/logstash:7.6.0
        volumes:
            - type: bind
              source: ./logstash/config/logstash.yml
              target: /usr/share/logstash/config/logstash.yml
              read_only: true
            - type: bind
              source: ./logstash/pipeline
              target: /usr/share/logstash/pipeline
              read_only: true
        ports:
        - "5000:5000/tcp"
        - "5000:5000/udp"
        - "9600:9600"
        environment:
            LS_JAVA_OPTS: "-Xmx256m -Xms256m"
        depends_on:
            - elasticsearch
        networks:
            - ai

    filebeat:
        image: "docker.elastic.co/beats/filebeat:7.6.0"
        user:
            root
        volumes:
            - ./filebeat/filebeat.yml:/usr/share/filebeat/filebeat.yml:ro
            - /var/lib/docker:/var/lib/docker:ro
            - /var/run/docker.sock:/var/run/docker.sock
        command: ["--strict.perms=false"]
        depends_on:
            - elasticsearch
        networks:
            - ai
    redis:
        image: redis
        expose:
            - 6379
        networks:
            - ai

    ai:
        image: recruitai
        build: .
        ports:
            - "8086:5000"
        volumes:
            - ./pretrained:/workspace/pretrained:ro
            - ./batchprocessing:/workspace/batchprocessing 
            - ./cvreconstruction:/workspace/cvreconstruction 
            - /var/log/recruitai:/workspace/logs 
        environment:
            - RECRUIT_BACKEND_DB=mongodb://staging_recruit:staging_recruit@5.9.144.226:27017/staging_recruit
            - CV_BUCKET_URL=staticrecruitai.excellencetechnologies.in
            - IS_DEV=True
        depends_on:
            - elasticsearch
            - redis
        networks:
            - ai
volumes: 
    elasticsearch:

networks:
    ai:
        driver: bridge